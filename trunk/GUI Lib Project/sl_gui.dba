remstart
	REQUIRES:
		- SL FIND FREE LIBRARY
remend

`SynLib GUI constants. Assigns numbers to gadget types
#CONSTANT SL_GUI_WINDOW 1

Type SL_GUIPRIORITY
	gtype		as integer
	id			as integer
EndType

Type SL_GUIGADGET
	name$		as string	`name of gadget
	parent$	as string	`id of parent in respective array
	id			as integer	`id in other array that holds all its info
	enabled	as boolean	`true or false
	visible	as boolean	`true or false
	gtype		as integer	`gadget type 1=window
EndType

Type SL_GUIWINDOW
	spr_topleft		as integer 	`sprite id of top left corner
	spr_topmid		as integer	`center piece of top border
	spr_topright	as integer	`top right corner sprite
	spr_rightmid	as integer	`center piece of right border
	spr_lowright	as integer	`bottom right corner sprite
	spr_lowmid		as integer	`center piece of bottom border
	spr_lowleft		as integer	`bottom left corner sprite
	spr_leftmid		as integer	`center piece of left border
	spr_resize		as integer	`resize icon
	spr_close		as integer	`close icon
	spr_minimize	as integer	`minimize icon
	spr_maximize	as integer	`maximize icon
	spr_titleleft	as integer	`caption/title bar left section
	spr_titleright	as integer	`caption/title bar right section
	spr_titlemid	as integer	`caption/title bar mid section
	x					as integer	`X screen position
	y					as integer	`Y screen position
	r					as integer	`red colour component
	g					as integer	`green colour component
	b					as integer	`blue colour component
	alpha				as integer	`transparency of window
	width				as integer	`width of window
	height			as integer	`height of window
	resizeable		as boolean	`true or false
	moveable			as boolean	`true or false
	minimizeable	as boolean	`true or false
	maximizeable	as boolean	`true or false
	label				as integer	`label array id.
EndType

Type SL_STYLEINFO
	section$			as string
	name$				as string
	img				as integer
EndType

Type SL_GUIBMPFONT
	img				as integer
EndType

Type SL_GUILABEL
	txt$				as string	`string
	txtstart			as integer	`start position in bmpchar array
	txtend			as integer	`end position in bmp char array
	size				as integer	`font size
EndType

Type SL_GUIBMPCHAR
	spr				as integer	`sprite id
EndType

Type SL_GUICURSOR
	curtype			as integer	`current type of gadget used
	grabbed			as integer	`id of gadget currently grabbed
	pressed			as integer	`id of gadget currently being pressed
	curdata			as integer	`current data needed to use current gadget (optional)
	offsetx			as integer	`cursor offset from gadget's position when it was active
	offsety			as integer
EndType

function SL_GUI_INIT()
	dim SL_STYLEINFO(0) as SL_STYLEINFO
	dim SL_GUIGADGET(0) as SL_GUIGADGET
	dim SL_GUIWINDOW(0) as SL_GUIWINDOW
	dim SL_GUILABEL(0) as SL_GUILABEL
	dim SL_GUIBMPCHAR(0) as SL_GUIBMPCHAR
	dim SL_GUIBMPFONT(255) as SL_GUIBMPFONT `array ids corrispond to ascii codes.
	dim SL_GUICURSOR(1) as SL_GUICURSOR
	dim SL_GUIPRIORITY(0) as SL_GUIPRIORITY
endfunction

function SL_Load_Style(filename$ as string)
	totalsections = 0
	sectionname$ = ""
	totalpieces = 0
	file = SL_FindFreeFile()
	memblock = SL_FindFreeMemblock()
	
	Open to Read file,filename$
	Read Long file,totalsections
	
	for section = 1 to totalsections
		read string file,sectionname$
		read long file,totalpieces
		
		for piece = 1 to totalpieces
			array insert at bottom SL_STYLEINFO(0)
			id = array count(SL_STYLEINFO(0))
			
			Read string file,SL_STYLEINFO(id).name$
			if SL_STYLEINFO(id).name$ = "NA"
				Array Delete Element SL_STYLEINFO(0),id
			else
				SL_STYLEINFO(id).section$ = sectionname$
				read memblock file,memblock
				img = SL_FindFreeImage(1)
				make image from memblock img,memblock
				delete memblock memblock
				SL_STYLEINFO(id).img = img
			endif
		next piece
	next section
	
	`Assign Window images
	array insert at bottom SL_GUIWINDOW(0)
	SL_GUIWINDOW(1).spr_topleft = SL_GetStyleImage("wtl")
	SL_GUIWINDOW(1).spr_topmid = SL_GetStyleImage("wtm")
	SL_GUIWINDOW(1).spr_topright = SL_GetStyleImage("wtr")
	SL_GUIWINDOW(1).spr_rightmid = SL_GetStyleImage("wmr")
	SL_GUIWINDOW(1).spr_lowright = SL_GetStyleImage("wbr")
	SL_GUIWINDOW(1).spr_lowmid = SL_GetStyleImage("wbm")
	SL_GUIWINDOW(1).spr_lowleft = SL_GetStyleImage("wbl")
	SL_GUIWINDOW(1).spr_leftmid = SL_GetStyleImage("wml")
	SL_GUIWINDOW(1).spr_titleleft = SL_GetStyleImage("wtbl")
	SL_GUIWINDOW(1).spr_titleright = SL_GetStyleImage("wtbr")
	SL_GUIWINDOW(1).spr_titlemid = SL_GetStyleImage("wtbm")
endfunction

function SL_GetStyleImage(name$ as string)
	for get = 1 to array count(SL_STYLEINFO(0))
		if SL_STYLEINFO(get).name$ = name$
			img = SL_STYLEINFO(get).img
			exitfunction img
		endif
	next get
	img = SL_STYLEINFO(1).img
endfunction img

function SL_LoadBMPFont(filename$)
	file = SL_FindFreeFile()
	memblock = SL_FindFreeMemblock()
	ascii = 0
	
	open to read file,filename$
		for char = 1 to 255
			read long file,ascii
			if ascii>0
				SL_GUIBMPFONT(char).img = SL_FindFreeImage(1)
				read memblock file,memblock
				make image from memblock SL_GUIBMPFONT(char).img,memblock
				delete memblock memblock
			endif
		next char
	close file file
endfunction

`===============GENERAL FUNCTION===========
function SL_GUIUpdatePriority(gtype as integer, id as integer)
	for old = array count(SL_GUIPRIORITY(0)) to 1 step -1
		if SL_GUIPRIORITY(old).gtype = gtype and SL_GUIPRIORITY(old).id = id
			Array Delete Element SL_GUIPRIORITY(0),old
		endif
	next old
	SL_GUIAddPriority(gtype,id)
	total = array count(SL_GUIPRIORITY(0))
	for new = 1 to total
		if SL_GUIPRIORITY(new).gtype = SL_GUI_WINDOW
			SL_SetWindowPriority(SL_GUIPRIORITY(new).id,total-new)
		endif
	next new
endfunction

function SL_GUIAddPriority(gtype as integer,id as integer)
	Array insert at top SL_GUIPRIORITY(0)
	SL_GUIPRIORITY(1).gtype = gtype
	SL_GUIPRIORITY(1).id = id
endfunction

`===============LABELS====================
function SL_MakeLabel(caption$ as string,x as integer,y as integer,size as integer)
	array insert at bottom SL_GUILABEL(0)
	id = array count(SL_GUILABEL(0))
	length = len(caption$)
	
	array insert at bottom SL_GUIBMPCHAR(0)
	char = array count(SL_GUIBMPCHAR(0))
	SL_GUILABEL(id).txtstart = char + 1
	SL_GUILABEL(id).txtend = char + len(caption$)
	SL_GUILABEL(id).txt$ = caption$
	SL_GUILABEL(id).size = size
	
	for write = SL_GUILABEL(id).txtstart to SL_GUILABEL(id).txtend
		curchar = curchar + 1
		array insert at bottom SL_GUIBMPCHAR(0)
		char = array count(SL_GUIBMPCHAR(0))
		ascii = asc(mid$(caption$,curchar))
		img = SL_GUIBMPFONT(ascii).img
		
		SL_GUIBMPCHAR(char).spr = SL_FindFreeSprite(1)
		if img>0
			sprite SL_GUIBMPCHAR(char).spr,x+((size-(size/4))*(curchar-1)),y,img
			size sprite SL_GUIBMPCHAR(char).spr,size,size
		endif
	next write
endfunction id

function SL_PositionLabel(id as integer,x as integer,y as integer)
	for move = SL_GUILABEL(id).txtstart to SL_GUILABEL(id).txtend
		curchar = curchar + 1
		ascii = asc(mid$(SL_GUILABEL(id).txt$,curchar))
		img = SL_GUIBMPFONT(ascii).img
		size = SL_GUILABEL(id).size
		
		if img>0
			sprite SL_GUIBMPCHAR(move).spr,x+((size-(size/4))*(curchar-1)),y,img
			size sprite SL_GUIBMPCHAR(move).spr,size,size
		endif
	next move
endfunction

`set the DRAW priority of a label
function SL_SetLabelPriority(id as integer,priority as integer)
	for pri = SL_GUILABEL(id).txtstart to SL_GUILABEL(id).txtend
		Set Sprite Priority SL_GUIBMPCHAR(pri).spr,priority
	next pri 
endfunction

`===========WINDOWS====================
function SL_MakeWindow(name$ as string,parent$ as string,label$ as string,x as integer,y as integer,width as integer,height as integer)
	array insert at bottom SL_GUIWINDOW(0)
	id = array count(SL_GUIWINDOW(0))
	
	array insert at bottom SL_GUIGADGET(0)
	gad = array count(SL_GUIGADGET(0))
	
	SL_GUIGADGET(gad).name$ = name$
	SL_GUIGADGET(gad).parent$ = parent$
	SL_GUIGADGET(gad).id = id
	SL_GUIGADGET(gad).enabled = 1
	SL_GUIGADGET(gad).visible = 1
	SL_GUIGADGET(gad).gtype = SL_GUI_WINDOW
	
	SL_GUIWINDOW(id).x = x
	SL_GUIWINDOW(id).y = y
	SL_GUIWINDOW(id).width = width
	SL_GUIWINDOW(id).height = height
	SL_GUIWINDOW(id).r = 255
	SL_GUIWINDOW(id).g = 255
	SL_GUIWINDOW(id).b = 255
	SL_GUIWINDOW(id).alpha = 255
	SL_GUIWINDOW(id).resizeable = 1
	SL_GUIWINDOW(id).moveable = 1
	SL_GUIWINDOW(id).maximizeable = 1
	SL_GUIWINDOW(id).minimizeable = 1
	
	`create and position window
	SL_GUIWINDOW(id).spr_topleft = SL_FindFreeSprite(1)
	sprite SL_GUIWINDOW(id).spr_topleft,x,y,SL_GUIWINDOW(1).spr_topleft
	
	SL_GUIWINDOW(id).spr_topmid = SL_FindFreeSprite(1)
	x = SL_GUIWINDOW(id).x + 32
	sprite SL_GUIWINDOW(id).spr_topmid,x,SL_GUIWINDOW(id).y,SL_GUIWINDOW(1).spr_topmid
	xsize = width - 32 - 32
	size sprite SL_GUIWINDOW(id).spr_topmid,xsize,32
	
	SL_GUIWINDOW(id).spr_topright = SL_FindFreeSprite(1)
	x = SL_GUIWINDOW(id).x + width - 32
	sprite SL_GUIWINDOW(id).spr_topright,x,SL_GUIWINDOW(id).y,SL_GUIWINDOW(1).spr_topright
	
	SL_GUIWINDOW(id).spr_rightmid = SL_FindFreeSprite(1)
	y = SL_GUIWINDOW(id).y + 32
	sprite SL_GUIWINDOW(id).spr_rightmid,x,y,SL_GUIWINDOW(1).spr_rightmid
	xsize = 32
	ysize = height - 32 - 32
	size sprite SL_GUIWINDOW(id).spr_rightmid,xsize,ysize
	
	SL_GUIWINDOW(id).spr_lowright = SL_FindFreeSprite(1)
	y = SL_GUIWINDOW(id).y + height - 32
	sprite SL_GUIWINDOW(id).spr_lowright,x,y,SL_GUIWINDOW(1).spr_lowright
	
	SL_GUIWINDOW(id).spr_lowmid = SL_FindFreeSprite(1)
	x = SL_GUIWINDOW(id).x + 32
	xsize = width - 32 - 32
	ysize = 32
	sprite SL_GUIWINDOW(id).spr_lowmid,x,y,SL_GUIWINDOW(1).spr_lowmid
	size sprite SL_GUIWINDOW(id).spr_lowmid,xsize,ysize
	
	SL_GUIWINDOW(id).spr_lowleft = SL_FindFreeSprite(1)
	x = SL_GUIWINDOW(id).x
	y = SL_GUIWINDOW(id).y + height - 32
	sprite SL_GUIWINDOW(id).spr_lowleft,x,y,SL_GUIWINDOW(1).spr_lowleft
	
	SL_GUIWINDOW(id).spr_leftmid = SL_FindFreeSprite(1)
	y = SL_GUIWINDOW(id).y + 32
	sprite SL_GUIWINDOW(id).spr_leftmid,x,y,SL_GUIWINDOW(1).spr_leftmid
	xsize = 32
	ysize = height - 32 - 32
	size sprite SL_GUIWINDOW(id).spr_leftmid,xsize,ysize

	SL_GUIWINDOW(id).spr_titleleft = SL_FindFreeSprite(1)
	x = SL_GUIWINDOW(id).x + 4
	y = SL_GUIWINDOW(id).y - 28
	sprite SL_GUIWINDOW(id).spr_titleleft,x,y,SL_GUIWINDOW(1).spr_titleleft
	
	SL_GUIWINDOW(id).spr_titlemid = SL_FindFreeSprite(1)
	x = x + 32
	xsize = width - 32 - 32 - 4 - 4
	sprite SL_GUIWINDOW(id).spr_titlemid,x,y,SL_GUIWINDOW(1).spr_titlemid
	size sprite SL_GUIWINDOW(id).spr_titlemid,xsize,32
	
	SL_GUIWINDOW(id).spr_titleright = SL_FindFreeSprite(1)
	x = SL_GUIWINDOW(id).x + width - 32 - 4
	sprite SL_GUIWINDOW(id).spr_titleright,x,y,SL_GUIWINDOW(1).spr_titleright

	`make label/caption last so that it appears over the window and not under it.
	SL_GUIAddPriority(SL_GUI_WINDOW,id)
	SL_GUIWINDOW(id).label = SL_MakeLabel(Label$,SL_GUIWINDOW(id).x+19,SL_GUIWINDOW(id).y-14,15)
endfunction

`set the position of a window
function SL_PositionWindow(id as integer,x as integer,y as integer)
	`update XY position
	SL_GUIWINDOW(id).x = x
	SL_GUIWINDOW(id).y = y
	width = SL_GUIWINDOW(id).width
	height = SL_GUIWINDOW(id).height
	`position window
	sprite SL_GUIWINDOW(id).spr_topleft,x,y,SL_GUIWINDOW(1).spr_topleft
	
	x = SL_GUIWINDOW(id).x + 32
	sprite SL_GUIWINDOW(id).spr_topmid,x,SL_GUIWINDOW(id).y,SL_GUIWINDOW(1).spr_topmid
	xsize = width - 32 - 32
	size sprite SL_GUIWINDOW(id).spr_topmid,xsize,32
	
	x = SL_GUIWINDOW(id).x + width - 32
	sprite SL_GUIWINDOW(id).spr_topright,x,SL_GUIWINDOW(id).y,SL_GUIWINDOW(1).spr_topright
	
	y = SL_GUIWINDOW(id).y + 32
	sprite SL_GUIWINDOW(id).spr_rightmid,x,y,SL_GUIWINDOW(1).spr_rightmid
	xsize = 32
	ysize = height - 32 - 32
	size sprite SL_GUIWINDOW(id).spr_rightmid,xsize,ysize
	
	y = SL_GUIWINDOW(id).y + height - 32
	sprite SL_GUIWINDOW(id).spr_lowright,x,y,SL_GUIWINDOW(1).spr_lowright
	
	x = SL_GUIWINDOW(id).x + 32
	xsize = width - 32 - 32
	ysize = 32
	sprite SL_GUIWINDOW(id).spr_lowmid,x,y,SL_GUIWINDOW(1).spr_lowmid
	size sprite SL_GUIWINDOW(id).spr_lowmid,xsize,ysize
	
	x = SL_GUIWINDOW(id).x
	y = SL_GUIWINDOW(id).y + height - 32
	sprite SL_GUIWINDOW(id).spr_lowleft,x,y,SL_GUIWINDOW(1).spr_lowleft
	
	y = SL_GUIWINDOW(id).y + 32
	sprite SL_GUIWINDOW(id).spr_leftmid,x,y,SL_GUIWINDOW(1).spr_leftmid
	xsize = 32
	ysize = height - 32 - 32
	size sprite SL_GUIWINDOW(id).spr_leftmid,xsize,ysize

	x = SL_GUIWINDOW(id).x + 4
	y = SL_GUIWINDOW(id).y - 28
	sprite SL_GUIWINDOW(id).spr_titleleft,x,y,SL_GUIWINDOW(1).spr_titleleft
	
	x = x + 32
	xsize = width - 32 - 32 - 4 - 4
	sprite SL_GUIWINDOW(id).spr_titlemid,x,y,SL_GUIWINDOW(1).spr_titlemid
	size sprite SL_GUIWINDOW(id).spr_titlemid,xsize,32
	
	x = SL_GUIWINDOW(id).x + width - 32 - 4
	sprite SL_GUIWINDOW(id).spr_titleright,x,y,SL_GUIWINDOW(1).spr_titleright
	
	SL_PositionLabel(SL_GUIWINDOW(id).label,SL_GUIWINDOW(id).x+19,SL_GUIWINDOW(id).y-14)
endfunction

`Set the DRAW priority of a window.
function SL_SetWindowPriority(id as integer,priority as integer)
	set sprite priority SL_GUIWINDOW(id).spr_topleft,priority
	set sprite priority SL_GUIWINDOW(id).spr_topmid,priority
	set sprite priority SL_GUIWINDOW(id).spr_topright,priority
	set sprite priority SL_GUIWINDOW(id).spr_rightmid,priority
	set sprite priority SL_GUIWINDOW(id).spr_lowright,priority
	set sprite priority SL_GUIWINDOW(id).spr_lowmid,priority
	set sprite priority SL_GUIWINDOW(id).spr_lowleft,priority
	set sprite priority SL_GUIWINDOW(id).spr_leftmid,priority
	set sprite priority SL_GUIWINDOW(id).spr_titleleft,priority
	set sprite priority SL_GUIWINDOW(id).spr_titlemid,priority
	set sprite priority SL_GUIWINDOW(id).spr_titleright,priority
	
	SL_SetLabelPriority(SL_GUIWINDOW(id).label,priority)
endfunction

`check if the window has been grabbed and give cursor the required info
function SL_GetWindowGrabbed(id as integer,m_click as integer,m_x as integer,m_y as integer)
	if m_click = 1
		if (m_x >= SL_GUIWINDOW(id).x+4 and m_x <= (SL_GUIWINDOW(id).x+SL_GUIWINDOW(id).width-4)) and (m_y >= SL_GUIWINDOW(id).y-28 and m_y <=SL_GUIWINDOW(id).y)
			SL_GUICURSOR(1).grabbed = id
			SL_GUICURSOR(1).curtype = SL_GUI_WINDOW
			SL_GUICURSOR(1).offsetx = m_x - SL_GUIWINDOW(id).x
			SL_GUICURSOR(1).offsety = m_y - SL_GUIWINDOW(id).y
			SL_GUIUpdatePriority(SL_GUI_WINDOW,id)
		endif
	endif
endfunction

`=======================GUI RUNNING CODE========================================
function SL_GUIRUN(m_click as integer,m_x as integer,m_y as integer,m_mz as integer)
	if SL_GUICURSOR(1).curtype>0
		if SL_GUICURSOR(1).grabbed>0
			if SL_GUICURSOR(1).curtype = SL_GUI_WINDOW
				id = SL_GUICURSOR(1).grabbed
				SL_PositionWindow(id,m_x-SL_GUICURSOR(1).offsetx,m_y-SL_GUICURSOR(1).offsety)
			endif
		endif
		if m_click = 0
			SL_GUICURSOR(1).grabbed = 0
			SL_GUICURSOR(1).curtype = 0
		endif
	else
		for run = 1 to array count(SL_GUIGADGET(0))
			if SL_GUIGADGET(run).gtype = SL_GUI_WINDOW
				SL_GetWindowGrabbed(SL_GUIGADGET(run).id,m_click,m_x,m_y)
			endif
		next run
	endif
endfunction
